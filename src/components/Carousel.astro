---
/** images */
interface Props {
  children: HTMLImageElement[];
}
---

<!-- ---
/** images */
interface Props {
  children: HTMLImageElement[];
}
---

<script>
  document.addEventListener("astro:page-load", () => {
    const carousel = document.getElementById("carousel");
    if (carousel === null) return;
    const children = Array.from(carousel.children);

    const { scrollWidth,clientWidth } = carousel;

    let currentImageIndex = 0;
    let autoScrollIsPaused = false;

    const scroll = () => {
      const newScrollX = (scrollWidth / children.length) * currentImageIndex;

      carousel.scroll({
        left: newScrollX,
        behavior: "smooth",
      });
    };

    carousel.addEventListener("click", (event) => {
      const { target: clickedChild, offsetX } = event as {
        target: HTMLImageElement | null;
        offsetX: number;
      };

      if (clickedChild === null) return;

      const childrenIndex = children.indexOf(clickedChild);
      const clickedChildWidth = clickedChild.clientWidth;

      offsetX >= clickedChildWidth / 2
        ? children[childrenIndex + 1] !== undefined &&
          (currentImageIndex = childrenIndex + 1)
        : children[childrenIndex - 1] !== undefined &&
          (currentImageIndex = childrenIndex - 1);

      scroll();
    });

    setInterval(() => {
      if (autoScrollIsPaused) return;

      children[currentImageIndex + 1] === undefined
        ? (currentImageIndex = 0)
        : (currentImageIndex += 1);

      scroll();
    }, 4000);

    carousel.addEventListener("mouseenter", () => {
      autoScrollIsPaused = true;
    });

    carousel.addEventListener("mouseleave", () => {
      autoScrollIsPaused = false;
    });
  });
</script>

<section
  id="carousel"
  class="cursor-pointer rounded rounded-2 shadow-md flex flex-row flex-nowrap snap-x snap-mandatory overflow-auto"
>
  <slot />
</section> -->
<script>
  document.addEventListener("astro:page-load", () => {
    const carousel = document.getElementById("carousel");
    if (carousel === null) return;
    const carouselImages = Array.from(carousel.children);

    let currentImageIndex = 0;
    let autoScrollIsPaused = false;

    const scroll = () => {
      const newScrollX =
        (carousel.scrollWidth / carouselImages.length) * currentImageIndex;

      carousel.scroll({
        left: newScrollX,
        behavior: "smooth",
      });
    };

    carousel.addEventListener("click", (event) => {
      const clickedChild = event.target as HTMLImageElement;
      if (!carouselImages.includes(clickedChild)) return;

      const childrenIndex = carouselImages.indexOf(clickedChild);
      const clickedChildWidth = clickedChild.clientWidth;

      const wasClickedOnRightSide = event.offsetX >= clickedChildWidth / 2;

      if (wasClickedOnRightSide) {
        currentImageIndex = (childrenIndex + 1) % carouselImages.length;
      } else {
        currentImageIndex =
          (childrenIndex - 1 + carouselImages.length) % carouselImages.length;
      }

      scroll();
    });

    setInterval(() => {
      if (autoScrollIsPaused) return;

      currentImageIndex = (currentImageIndex + 1) % carouselImages.length;
      scroll();
    }, 4000);

    carousel.addEventListener("mouseenter", () => {
      autoScrollIsPaused = true;
    });

    carousel.addEventListener("mouseleave", () => {
      autoScrollIsPaused = false;
    });

    // Adding resize event listener to handle window resize
  });
</script>

<section
  id="carousel"
  class="cursor-pointer rounded rounded-2 shadow-md flex flex-row flex-nowrap snap-x snap-mandatory overflow-hidden"
>
  <slot />
</section>
